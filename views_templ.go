// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.639
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

type RepoLink struct {
	Repo templ.SafeURL
	Img  string
	Name string
}

type PageData struct {
	ContainersAndKubernetes []RepoLink
	Devops                  []RepoLink
	Books                   []RepoLink
	Books2                  []RepoLink
	WantToRead              []RepoLink
}

func page(pg PageData) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en-us\" prefix=\"og: http://ogp.me/ns#\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"><title>Piotr Wera Curriculum</title><meta name=\"author\" content=\"Piotr Wera\"><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><link href=\"https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,700,700i%7CMaitree:200,300,400,600,700&amp;subset=latin-ext\" rel=\"stylesheet\"><link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/static/css/webslides.css\"><link rel=\"stylesheet\" type=\"text/css\" media=\"all\" href=\"/static/css/svg-icons.css\"><meta name=\"mobile-web-app-capable\" content=\"yes\"><meta name=\"theme-color\" content=\"#333333\"><style>\n        /* CSS to scale the video element */\n        video {\n            height: 100vh;\n            width: auto; /* Maintain aspect ratio */\n        }\n\n\n .someFeature * {\n\tbox-sizing: border-box;\n}\n\n .someFeature {\n\tfont-family: Lato, sans-serif;\n\tmargin: 0;\n\tpadding: 1rem;\n\tmin-height: 100vh;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n\n.someFeature img {\n\tdisplay: center;\n\tobject-fit: cover;\n\ttransition: transform 1000ms;\n}\n\n.someFeature ul {\n\tlist-style: none;\n\tmargin: 0;\n\tpadding: 0;\n\tdisplay: grid;\n\tgap: 0.5rem;\n\tgrid-template-columns: repeat(auto-fit, minmax(20rem, 1fr));\n\tmax-width: 100%;\n\twidth: 70rem;\n}\n\n.someFeature figure {\n\tmargin: 0;\n\tposition: relative;\n\toverflow: hidden;\n}\n\n.someFeature figure::after {\n\tcontent: '';\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 200%;\n\theight: 200%;\n\tbackground: rgba(0, 0, 0, 0.5);\n\ttransform-origin: center;\n\topacity: 0;\n\ttransform: scale(2);\n\ttransition: opacity 300ms;\n}\n\n.someFeature a:is(:hover, :focus) figure::after {\n\topacity: 1;\n}\n\n.someFeature a:is(:hover, :focus) figcaption {\n\topacity: 1;\n\ttransition: opacity 600ms;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n\t.someFeature figcaption {\n\t\ttransform: translate3d(0, 2rem, 0);\n\t}\n\n\t.someFeature figure::after {\n\t\tborder-radius: 50%;\n\t\topacity: 1;\n\t\ttransform: scale(0);\n\t\ttransition: transform 900ms;\n\t}\n\n\t.someFeature a:is(:hover, :focus) figure::after {\n\t\ttransform: scale(2.5);\n\t}\n\n\t.someFeature a:is(:hover, :focus) figcaption {\n\t\topacity: 1;\n\t\ttransform: translate3d(0, 0, 0);\n\t\ttransition: opacity 600ms 400ms, transform 600ms 400ms;\n\t}\n\n\t.someFeature a:is(:hover, :focus) img {\n\t\ttransform: scale(1.2);\n\t}\n}\n\n\n\n    </style></head><body><main role=\"main\"><article id=\"webslides\"><section id=\"slide1\"><span class=\"background\" style=\"background-image:url(&#39;/static/images/unsplash.jpeg&#39;)\"></span><div class=\"wrap size-70\"><div class=\"aligncenter\"><h2 id=\"piotr-wera-curriculum\"><strong>Piotr Wera Curriculum</strong></h2>My intrests include <svg class=\"fa-desktop\"><use xlink:href=\"#fa-desktop\"></use></svg> Backend development,<svg class=\"fa-cube\"><use xlink:href=\"#fa-cube\"></use></svg> Containers,<br><svg class=\"fa-cogs\"><use xlink:href=\"#fa-cogs\"></use></svg> Kubernetes,<svg class=\"fa-cloud-download\"><use xlink:href=\"#fa-cloud-download\"></use></svg> Cloud</div></div></section><section id=\"slide2\"><div class=\"wrap\"><div class=\"grid\"><div class=\"column\"><h3 id=\"coding-experience\"><strong>Coding experience</strong></h3><code>Polyglot programmers</code> have the ability to think about challenges from more than one perspective and are more likely to find simple, elegant solutions for those challenges.<br><pre tabindex=\"0\"><code>Programming languages: ‚îú‚îÄ‚îÄ Most experienced with: ‚îÇ   ‚îú‚îÄ‚îÄ Java ‚îÇ   ‚îú‚îÄ‚îÄ Golang ‚îÇ   ‚îî‚îÄ‚îÄ Rust ‚îú‚îÄ‚îÄ I understand also: ‚îÇ   ‚îî‚îÄ‚îÄ C++</code></pre></div></div></div></section><section id=\"slide3\"><div class=\"wrap\"><div class=\"content-left\"><h2 id=\"containers--kubernetes\">Containers &amp; Kubernetes.</h2></div><ul class=\"flexblock features\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, p := range pg.ContainersAndKubernetes {
			templ_7745c5c3_Err = li(p).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></section><section id=\"slide4\"><div class=\"wrap\"><div class=\"content-left\"><h2 id=\"devops\">DevOps.</h2></div><ul class=\"flexblock features\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, p := range pg.Devops {
			templ_7745c5c3_Err = li(p).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></section><section id=\"slide5\"><div><video autoplay muted loop><source src=\"/static/vid/vid-short2.mp4\" type=\"video/mp4\"></video></div></section><section class=\"features\" id=\"slide6\"><h2 id=\"books-ive-recently-read\">Books I&rsquo;ve Recently Read:</h2><div class=\"someFeature\"><ul>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, p := range pg.Books {
			templ_7745c5c3_Err = figure(p).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></section><section class=\"features\" id=\"slide7\"><h2 id=\"books-ive-recently-read-1\">Books I&rsquo;ve Recently Read:</h2><div class=\"someFeature\"><ul>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, p := range pg.Books2 {
			templ_7745c5c3_Err = figure(p).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></section><section class=\"features\" id=\"slide8\"><h2 id=\"books-want-to-read\">Books I want to Read:</h2><div class=\"someFeature\"><ul>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, p := range pg.WantToRead {
			templ_7745c5c3_Err = figure(p).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</ul></div></section><section id=\"slide9\" class=\"bg-apple\"><span class=\"background-right-bottom\" style=\"background-image:url(&#39;static/images/background.png&#39;)\"></span><div class=\"wrap\"><h2 id=\"checkout-my-badges\">Checkout my badges</h2><p><a href=\"https://www.credly.com/users/piotrwera/badges\">‚Äî <code>Click here</code></a></p></div></section><section id=\"slide10\"><div class=\"wrap\"><h2 id=\"where-you-can-find-me\"><strong>Where you can find me</strong></h2><ul class=\"flexblock gallery\"><li><a href=\"https://github.com/Pwera\" title=\"Github\"><figure><img alt=\"Thumbnail Github\" src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\"><figcaption><h2>Github</h2></figcaption></figure></a></li><li><a href=\"https://www.linkedin.com/in/pwera\" title=\"LinkedIn\"><figure><img alt=\"Thumbnail LinkedIn\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/ca/LinkedIn_logo_initials.png\"><figcaption><h2>LinkedIn</h2></figcaption></figure></a></li><li><a href=\"mailto:%20piotr.wera.mail@gmail.com\" title=\"Email\"><figure><img alt=\"Thumbnail Email\" src=\"https://webslides.tv/static/images/demos-portfolios.png\"><figcaption><h2>Email</h2></figcaption></figure></a></li><li><a href=\"https://wakatime.com/@549b2c15-9940-4c91-9340-f466a5778386\" title=\"Empty\"><figure><img alt=\"Thumbnail Empty\" src=\"https://wakatime.com/static/img/wakatime.svg\"><figcaption><h2>WakaTime</h2></figcaption></figure></a></li></ul></div></section><section id=\"slide11\"><div class=\"wrap\"><h3>My devtools:</h3><p><code>Kubernetes</code> local development:</p><ul class=\"flexblock blink\"><li><a href=\"https://github.com/derailed/k9s\"><h2><svg class=\"fa-bar-chart\"><use xlink:href=\"#fa-bar-chart\"></use></svg> k9s</h2>üê∂ Manage Your Kubernetes Clusters In Style</a></li><li><a href=\"https://github.com/tilt-dev/ctlptl\"><h2><svg class=\"fa-balance-scale\"><use xlink:href=\"#fa-balance-scale\"></use></svg> ctlptlget</h2>üß©Making local Kubernetes clusters fun and easy to set up</a></li><li><a href=\"https://github.com/stern/stern\"><h2><svg class=\"fa-cog\"><use xlink:href=\"#fa-cog\"></use></svg> stern</h2>‚éà Multi pod and container log tailing for Kubernetes</a></li></ul><hr><p><code>Kubernetes</code> distributons:</p><ul class=\"flexblock border\"><li><a href=\"https://rancherdesktop.io/\"><h2><svg class=\"fa-bar-chart\"><use xlink:href=\"#fa-bar-chart\"></use></svg> rancher-desktop</h2></a> ü§†Container Management and Kubernetes on the Desktop</li><li><a href=\"https://k3s.io/\"><h2><svg class=\"fa-balance-scale\"><use xlink:href=\"#fa-balance-scale\"></use></svg> k3s</h2>üåêThe certified Kubernetes distribution built for IoT & Edge computing</a></li><li><a href=\"https://kind.sigs.k8s.io/\"><h2><svg class=\"fa-cog\"><use xlink:href=\"#fa-cog\"></use></svg> kinD</h2>üåüTool for running local Kubernetes clusters using Docker container ‚Äúnodes‚Äù</a></li></ul></div><!-- .end .wrap --></section><section id=\"slide12\"><div class=\"wrap\"><h3>My devtools:</h3><p><code>cli utilities:</code></p><ul class=\"flexblock blink\"><li><a href=\"https://github.com/starship/starship\"><h2><svg class=\"fa-bar-chart\"><use xlink:href=\"#fa-bar-chart\"></use></svg> starship</h2>üå†üöÄThe minimal, blazing-fast, and infinitely customizable prompt for any shell</a></li><li><a href=\"https://github.com/extrawurst/gitui\"><h2><svg class=\"fa-balance-scale\"><use xlink:href=\"#fa-balance-scale\"></use></svg> gitui</h2>üí•Blazing fast terminal-ui for git written in rust ü¶Ä</a></li><li><a href=\"https://scoop.sh/\"><h2><svg class=\"fa-cog\"><use xlink:href=\"#fa-cog\"></use></svg> scoop</h2>ü•ÑA command-line installer for Windows.</a></li></ul><ul class=\"flexblock border\"><li><a href=\"https://github.com/jdx/mise\"><h2><svg class=\"fa-bar-chart\"><use xlink:href=\"#fa-bar-chart\"></use></svg> mise</h2>üöÄDev tools, env vars, task runner</a></li><li><a href=\"https://github.com/sharkdp/bat\"><h2><svg class=\"fa-balance-scale\"><use xlink:href=\"#fa-balance-scale\"></use></svg> bat</h2>ü¶áA cat(1) clone with wings</a></li><li><a href=\"https://smallstep.com/cli/index.html\"><h2><svg class=\"fa-cog\"><use xlink:href=\"#fa-cog\"></use></svg> step</h2>üîçThe command-line interface for all things Smallstep</a></li></ul><ul class=\"flexblock border\"><li><a href=\"https://mutagen.io/\"><h2><svg class=\"fa-bar-chart\"><use xlink:href=\"#fa-bar-chart\"></use></svg> mutagen</h2>üß¨Mutagen provides real-time file synchronization and flexible network forwarding</a></li><li><a href=\"https://github.com/jesseduffield/lazydocker\"><h2><svg class=\"fa-balance-scale\"><use xlink:href=\"#fa-balance-scale\"></use></svg> lazydocker</h2>üò¥üê≥The lazier way to manage everything docker</a></li><li><a href=\"https://github.com/xxxserxxx/gotop\"><h2><svg class=\"fa-cog\"><use xlink:href=\"#fa-cog\"></use></svg> gotop</h2>üé¢A terminal based graphical activity monitor inspired by gtop and vtop</a></li></ul></div><!-- .end .wrap --></section></article></main><script src=\"/static/js/webslides.min.js\"></script><script>window.ws = new WebSlides({minWheelDelta: 40 ,scrollWait: 450 ,slideOffset: 50 ,});</script><script defer src=\"/static/js/svg-icons.js\"></script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func li(rl RepoLink) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li><h2><a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var3 templ.SafeURL = rl.Repo
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var3)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><figure><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var4 string
		templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(rl.Img)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views.templ`, Line: 502, Col: 57}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></figure>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(rl.Name)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views.templ`, Line: 502, Col: 79}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</a></h2></li>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

func figure(rl RepoLink) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var6 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var6 == nil {
			templ_7745c5c3_Var6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<li><a href=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var7 templ.SafeURL = rl.Repo
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(string(templ_7745c5c3_Var7)))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"><figure><img src=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var8 string
		templ_7745c5c3_Var8, templ_7745c5c3_Err = templ.JoinStringErrs(rl.Img)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `views.templ`, Line: 511, Col: 29}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var8))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\"></figure></a></li>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
